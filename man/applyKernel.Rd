% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convolution.R
\docType{methods}
\name{applyKernel}
\alias{applyKernel}
\alias{applyKernel,RasterLayer-method}
\alias{applyKernel,RasterBrick-method}
\title{Convolution of a raster with a kernel.}
\usage{
applyKernel(quality, d, kernelShape, patches = NULL,
  negligible = 10^-10, useSpatialfil = F, useAveDist = F)

\S4method{applyKernel}{RasterLayer}(quality, d, kernelShape,
  patches = NULL, negligible = 10^-10, useSpatialfil = F,
  useAveDist = F)

\S4method{applyKernel}{RasterBrick}(quality, d, kernelShape,
  patches = NULL, negligible = 10^-10, useSpatialfil = F,
  useAveDist = F)
}
\arguments{
\item{quality}{RasterLayer.}

\item{d}{Numeric. Distance parameter. For euclidean kernel this is average dispersal distances. For uniform kernel this is width of buffer or average distance if useAveDist=T. In the units of x.}

\item{kernelShape}{String. Exponential or Uniform}

\item{patches}{RasterLayer. Optional. Used to mask return layer if provided.}

\item{negligible}{Numeric. Truncation value for exponential kernel.}

\item{useSpatialfil}{Logical. Use spatialfil instead of velox. Slower (?), wrapped boundaries.}

\item{useAveDist}{Logical. If TRUE d is average dispersal distance for uniform kernels. Otherwise (default) d is buffer width.}
}
\value{
A convolved RasterLayer - value of each pixel is kernel weighted neighbourhood average of quality.

A convolved RasterBrick - value of each pixel is kernel weighted neighbourhood average of quality.
}
\description{
Convolution of a raster with a kernel.
}
\details{
Exponential kernel as in Hughes2015.

Uniform kernel gives buffered sum.
}
\examples{
# TODO: examples
}
